How did viewing a diff between two versions of a file help you see the bug that was introduced?

- It shows what was changed between the 2 files, and in Mac/Linux, it showed the line nubmer as well

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

- I could refer back to the old versions for what changes I've made, what diff it makes when I changed few lines of codes between the old and latest versions, and could revert back to any old versions of the program is the latest one is having lots of problems.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

- the pros are that you can choose to save when you have made changes to the docs, whereas auto save, you cannot control when to save and when you reopen the project, the docs might be in a mess

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

- to track the which files are affected when 1 file is committed.

How can you use the commands git log and git diff to view the history of files?

- Diff ID gives different message that stated what have been change and can use git diff to compare between files to see which and what line was added and removed

How might using version control make you more confident to make changes that could break something?

- can always revert back and see what changes was made

Now that you have your workspace set up, what do you want to try using Git for?

- use it for my javascript lesson